Test cases for 1-my_list.py


>>> class MyList(list):
...     """A class that inherits from list"""
...     def print_sorted(self):
...         """prints a sorted list"""
...         print(sorted(self))
...
>>> list = [1, 2, 3, 4, 5]
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> my_list
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> my_list = MyList()
>>> my_list.print_sorted()
[]
>>> my_list.append(3)
>>> my_list.print_sorted()
[3]
>>> my_list.append(-13)
>>> my_list.append(-3)
>>> my_list.print_sorted()
[-13, -3, 3]
>>> my_list = MyList([19, 6, 2, 3, 5])
>>> my_list
[19, 6, 2, 3, 5]
>>> my_list.print_sorted()
[2, 3, 5, 6, 19]
>>> my_list = MyList(1)
Traceback (most recent call last):
	...
TypeError: 'int' object is not iterable
>>> my_list = MyList([9,9,9,9])
>>> my_list.print_sorted()
[9, 9, 9, 9]
>>> hey = [5,4,3,2,1]
>>> hey.print_sorted()
Traceback (most recent call last):
	...
AttributeError: 'list' object has no attribute 'print_sorted'
>>> 
